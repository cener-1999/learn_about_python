python编写server的步骤：

1.创建socket对象，调用socket构造函数
	socket=socket.socket()
	
2.把socket绑定到指定地址，通过socket对象的bind方法来实现：
	socket.bind(address)
	由AF_INET所创建的套接字，address地址必须是一个双元素元组，格式是(host,port)。host代表主机，port代表端口号。如果端口号正在使用、主机名不正确或端口已被保留，bind方法将引发socket.error异常。
	
	bind:监听这个IP地址和端口的所有数据
	
3.使用socket的套接字的listen方法接受连接请求。
	socket.listen(backlog)
	backlog指定最多允许多少个客户连接到服务器。它的值至少为1。收到连接请求后，这些请求需要排队，如果队列满，就拒绝请求。
	
4.服务器通过socket.accept方法等待一个客户请求一个连接。
	
	connection,address=socket.accept()
	调用accept方法时，socket会时入“waiting”状态。客户请求连接时，方法建立连接并返回服务器。accept方法返回一个含有两个元素的 元组(connection,address)。第一个元素connection是新的socket对象，服务器必须通过它与客户通信；第二个元素 address是客户的Internet地址。
	
5. 第五步是处理阶段，服务器和客户端通过send和recv方法通信(传输 数据)。
	服务器调用send，并采用字符串形式向客户发送信息。send方法返回已发送的字符个数。
	服务器使用recv方法从客户接收信息。调用recv时，服务器必须指定一个整数，它对应于可通过本次方法调用来接收的最大数据量。
		
		recv方法在接收数据时会进入“blocked”状态，最后返回一个字符 串，用它表示收到的数据。如果发送的数据量超过了recv所允许的，数据会被截短。多余的数据将缓冲于接收端。以后调用recv时，多余的数据会从缓冲区删除(以及自上次调用recv以来，客户可能发送的其它任何数据)。

6. 传输结束，服务器调用socket的close方法关闭连接。

Q:在服务器端accept()建立的socket是什么原理啊？